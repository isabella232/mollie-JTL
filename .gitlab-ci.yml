image: registry.webstollen.de/docker/jtl-plugin-ci:master

stages:
  - test
  - build
  - release
  - deploy

sast:
  stage: test
include:
  - template: Security/SAST.gitlab-ci.yml

code_navigation:
  image: node:14
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_TAG'
      exists:
        - adminmenu/app/package.json
  allow_failure: true # recommended
  script:
    - npm install -g @sourcegraph/lsif-tsc
    - lsif-tsc -p ./adminmenu/app
  artifacts:
    reports:
      lsif: dump.lsif

phpunit:
  image: registry.webstollen.de/docker/jtl-plugin-ci:php73
  stage: test
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_TAG'
      exists:
        - phpunit.xml
  script:
    - if [ -f "phpunit.xml" ]; then composer install -o && ./vendor/bin/phpunit; else echo "Skipped PHPUnit, no phpunit.xml"; fi

composer:
  stage: build
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_TAG'
      exists:
        - composer.json
  cache:
    key:
      files:
        - composer.lock
    paths:
      - vendor
    policy: pull
  script:
    - if [ -f "composer.json" ]; then composer install --no-dev -o; else echo "Skipped Composer, no composer.json"; fi
    - if [ -f "composer.json" ]; then rm -rf vendor/webstollen/jtl5-plugin/tests vendor/webstollen/jtl5-plugin/core vendor/webstollen/jtl5-plugin/docker; else echo "Skipped Composer, no composer.json"; fi
  artifacts:
    expire_in: 3 days
    untracked: true

node:
  stage: build
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_TAG'
      exists:
        - adminmenu/app/package.json
  cache:
    key:
      files:
        - adminmenu/app/yarn.lock
    paths:
      - adminmenu/app/node_modules
      - adminmenu/app/.yarn-cache
    policy: pull
  script:
    - npm config set "@fortawesome:registry" https://npm.fontawesome.com/
    - npm config set -- '//npm.fontawesome.com/:_authToken' "${FONT_AWESOME_TOKEN}"
    - npm config set "@dash.bar:registry" https://gitlab.webstollen.de/api/v4/packages/npm/
    - npm config set "@webstollen:registry" https://gitlab.webstollen.de/api/v4/packages/npm/
    - npm config set -- '//gitlab.webstollen.de/api/v4/packages/npm/:_authToken' "${CI_JOB_TOKEN}"
    - npm config set -- '//gitlab.webstollen.de/api/v4/projects/444/packages/npm/:_authToken' "${CI_JOB_TOKEN}"
      $CI_JOB_TOKEN
    - |
      if [ -f "adminmenu/app/package.json" ]; then
        cd adminmenu/app && yarn install --frozen-lockfile --cache-folder .yarn-cache && yarn build;
      else
        echo "Skipped Yarn build, no packages.json";
      fi
  artifacts:
    expire_in: 3 days
    untracked: false
    paths:
      - adminmenu/app/build

pack:
  stage: release
  #  needs: [ "node", "composer" ]
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_TAG'
  script:
    - rm -rf .git/ adminmenu/app/src/ adminmenu/app/test/ adminmenu/app/public/ tests/
    - rm -f .gitlab-ci.yml adminmenu/app/*.js* adminmenu/app/yarn.lock adminmenu/app/README.md adminmenu/cra.sh psalm.xml .php_cs phpcs.xml phpcs-gitlab.xml
    - |
      if [[ $SKIP_COMPILE = 1 ]]; then
        echo "Skipped Compiler.";
      else
        if [ -d "./vendor/webstollen/" ]; then
          compiler vendor/webstollen/ vendor/webstollen/;
        fi;
      fi;
    - cd ..
    - |
      if [[ $SKIP_COMPILE = 1 ]]; then
        echo "Skipped Compiler.";
      else
        compiler $CI_PROJECT_DIR $CI_PROJECT_DIR;
      fi
    - zip -r $CI_PROJECT_DIR/$CI_PROJECT_NAME-$CI_COMMIT_REF_NAME.zip $CI_PROJECT_NAME
  artifacts:
    expire_in: 30 days
    paths:
      - "$CI_PROJECT_NAME-$CI_COMMIT_REF_NAME.zip"

#release_job:
#  stage: release
#  image: registry.gitlab.com/gitlab-org/release-cli:latest
#  only:
#  - tags
#  script:
#    - if [[ $SKIP_COMPILE = 1 ]]; then export SRC_PREFIX="-src"; fi
#  release:
#    tag_name: $CI_COMMIT_TAG
#    ref: $CI_COMMIT_SHA
#    description: 'Release $CI_COMMIT_TAG'
#    assets:
#      links:
#      - name: 'CDN'
#        url: 'https://ws-download.de/jtl-plugins/$CI_PROJECT_NAME/$CI_PROJECT_NAME-$CI_COMMIT_REF_NAME$SRC_PREFIX.zip'


upload:
  stage: deploy
  needs: [ "pack" ]
  artifacts:
    paths:
      - $CI_PROJECT_NAME-$CI_COMMIT_REF_NAME.zip
  only:
    - tags
    - master
  script:
    - aws configure set region eu-central-1
    - if [[ $SKIP_COMPILE = 1 ]]; then export SRC_PREFIX="-src"; fi
    - aws s3 cp $CI_PROJECT_NAME-$CI_COMMIT_REF_NAME.zip s3://$S3_BUCKET/jtl-plugins/$CI_PROJECT_NAME/$CI_PROJECT_NAME-$CI_COMMIT_REF_NAME$SRC_PREFIX.zip
    - echo "DOWNLOAD URL https://ws-download.de/jtl-plugins/$CI_PROJECT_NAME/$CI_PROJECT_NAME-$CI_COMMIT_REF_NAME$SRC_PREFIX.zip"
